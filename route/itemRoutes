 const express = require('express');
const db = require('../database');  // Import the database connection pool
const router = express.Router();

// Create Item
router.post('/', async (req, res) => {
  const { name, description } = req.body;
  try {
    const [result] = await db.execute('INSERT INTO items (name, description) VALUES (?, ?)', [name, description]);
    res.status(201).json({
      id: result.insertId,
      name,
      description,
    });
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// Get All Items
router.get('/', async (req, res) => {
  try {
    const [rows] = await db.execute('SELECT * FROM items');
    res.json(rows);
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// Get Single Item by ID
router.get('/:id', async (req, res) => {
  const { id } = req.params;
  try {
    const [rows] = await db.execute('SELECT * FROM items WHERE id = ?', [id]);
    if (rows.length === 0) {
      return res.status(404).json({ message: 'Item not found' });
    }
    res.json(rows[0]);
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// Update Item
router.put('/:id', async (req, res) => {
  const { id } = req.params;
  const { name, description } = req.body;
  try {
    const [result] = await db.execute(
      'UPDATE items SET name = ?, description = ? WHERE id = ?',
      [name, description, id]
    );

    if (result.affectedRows === 0) {
      return res.status(404).json({ message: 'Item not found' });
    }

    res.json({ id, name, description });
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// Delete Item
router.delete('/:id', async (req, res) => {
  const { id } = req.params;
  try {
    const [result] = await db.execute('DELETE FROM items WHERE id = ?', [id]);

    if (result.affectedRows === 0) {
      return res.status(404).json({ message: 'Item not found' });
    }

    res.status(204).end();
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

module.exports = router;